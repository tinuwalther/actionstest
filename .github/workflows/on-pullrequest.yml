# This is a basic workflow to help you get started with Actions

name: Pull request -> run Pester Tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  trigger_pester:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
        
    steps:
      # Clone repo
      - name: Clone repo ${{ github.event.pull_request.head.sha }}
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      # Do magic things and commit
      - name: Do Magic things
        run: Write-Host "Autocommit ${{ github.event.pull_request }}"

      # Push feature branch
      - name: Push feature branch
        run: Write-Host "Autopush ${{ github.event.pull_request }}"

      # Run Pester Tests
      - name: Invoke Pester Tests
        run: |
          Write-Host "Install and import Modules"
          Install-Module -Name psyml -force
          Import-Module -Name Pester -MinimumVersion 5.3.3

          Write-Host "Initialize path-variable"
          $ParentLocation = Get-Location | Select -ExpandProperty Path
          $ReportsPath    = Join-Path -Path $ParentLocation -ChildPath 'Reports'
          $TestsPath      = Join-Path -Path $ParentLocation -ChildPath 'Tests'
          $BinPath        = Join-Path -Path $ParentLocation -ChildPath 'Bin'
          $ReadmeFullName = Join-Path -Path $ParentLocation -ChildPath 'README.md'
          $ReportFullName = Join-Path -Path $ReportsPath -ChildPath 'Last-TestsReport.NUnitXml'
          $CsvFullName    = $($ReportFullName -replace '.NUnitXml', '.csv')

          Write-Host "Run Pester Tests"
          $config = [PesterConfiguration]::Default
          $config.Run.Path           = $TestsPath
          $config.Filter.Tag         = "Required"
          $config.Output.Verbosity   = 'Normal'
          $config.Run.PassThru       = $true
          $NUnitReport = Invoke-Pester -Configuration $config

          Write-Host "Create Last-TestsReport.NUnitXml"
          if(-not(Test-Path $ReportsPath)){
            $null = New-Item -Path $ReportsPath -ItemType Directory
          }
          $NUnitReport | Export-NUnitReport -Path $ReportFullName #Last-TestsReport.NUnitXml
          
          Write-Host "Create CSV-Report"
          if(Test-Path $CsvFullName){
            $null = Remove-Item -Path $CsvFullName -Force
          }
          $result = . "$($BinPath)/Read-FromXML.ps1" -Inputfile $ReportFullName
          $result.Tests | ConvertTo-Csv | Out-File -FilePath $($ReportFullName -replace '.NUnitXml', '.csv') -Encoding utf8 -NoClobber -Force

          Write-Host "Update README.md"
          Add-Content -Path $ReadmeFullName -Value "`n## Last Pester-run"
          Add-Content -Path $ReadmeFullName -Value "`nLast run from $($result.ExecutedAt) finished with result $($result.Result). Fore more information, see Reports/Last-TestsReport.csv"
          Add-Content -Path $ReadmeFullName -Value "Result|Count"
          Add-Content -Path $ReadmeFullName -Value "-|-"
          Add-Content -Path $ReadmeFullName -Value "Total|$($result.TotalCount)"
          Add-Content -Path $ReadmeFullName -Value "Passed|$($result.PassedCount)"
          Add-Content -Path $ReadmeFullName -Value "Failed|$($result.FailedCount)"
          Add-Content -Path $ReadmeFullName -Value "Error|$($result.ErrorCount)"
          Add-Content -Path $ReadmeFullName -Value "Skipped|$($result.SkippedCount)"
          Add-Content -Path $ReadmeFullName -Value "NotRun|$($result.NotRunCount)"

      - name: Upload changes
        run: |
          $CommitMessage = "Upload Last-TestsReport"
          git add .
          git commit -m $CommitMessage
          git push

      # Merge in to main branch
      - name: Merge in to main branch
        run: Write-Host "Automerge  ${{ github.event.pull_request }}"

      # Delete feature branch
      - name: Delete feature branch
        run: Write-Host "Autodelete ${{ github.event.pull_request }}"
